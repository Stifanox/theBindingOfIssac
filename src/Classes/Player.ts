import { Actions, EntityInterface, FaceEntity} from "../Utils/Interfaces";
import { SpriteAnimator } from "./SpriteAnimator";
import issac from "../../Img/Issac_Sprite.png"
import { KeyboardControler } from "./KeyboardControler";
import { MovementActionObject, ShotActionObject } from "../Utils/Actions";
import { AnimationObjectCreate } from "./AnimationObjectCreate";
import { PlayfieldSize } from "../Utils/PlayfiledSize";

/**
 * Main class of player.
 * @implements EntityInterface
 */
export class Player implements EntityInterface,FaceEntity{
   
    vx: number;
    vy: number;
    imageSource: SpriteAnimator;
    headSource: SpriteAnimator;
    hitboxWidth: number;
    hitboxHeight: number;
    width: number;
    height: number;
    x: number;
    y: number;
    headWidth:number;
    headHeight:number;
    movementObject: Actions; // Jest tutaj aby nie wywalało błędu, dla playera nie ma potrzeby bo ma obiekt globalny

    constructor() {
        this.x = 10
        this.y = 200
        this.vy = 0.3
        this.vx = 0.3
        //BODY OF PLAYER
        this.imageSource = new SpriteAnimator([new AnimationObjectCreate(issac,32,22,false,9,32,"walkDown",75),new AnimationObjectCreate(issac,32,22,false,9,32,"walkLeft",448,5),
        new AnimationObjectCreate(issac,32,22,false,9,32,"walkUp",405),new AnimationObjectCreate(issac,32,22,false,9,32,"walkRight",118)])
        this.headSource = new SpriteAnimator([new AnimationObjectCreate(issac,39,34,false,1,40,"shotTearDown",20,4),new AnimationObjectCreate(issac,39,34,false,1,40,"shotTearRight",20,82),
        new AnimationObjectCreate(issac,39,34,false,1,40,"shotTearUp",20,162),new AnimationObjectCreate(issac,39,34,false,1,40,"shotTearLeft",20,243)])
        this.height = this.imageSource.spriteHeight +20
        this.width = this.imageSource.spriteWidth + 20
        this.headWidth = this.headSource.spriteWidth + 40
        this.headHeight = this.headSource.spriteHeight + 40
    }

    /**
     * Draws main body and head of player
     * @param {CanvasRenderingContext2D} ctx canvas 2D context provided from game
     */
    draw(ctx:CanvasRenderingContext2D): void {
        //BODY
        this.imageSource.draw(ctx,this.x,this.y,this.width,this.height)
        this.headSource.draw(ctx,this.x-9,this.y-46,this.headWidth,this.headHeight)
    }

    /**
     * Update position of player enitity
     * @param {number} delta number between 2 frames. This number is generated by requestAnimationFrame.
     */
    update(delta: number): void {
        //MOVEMENT
        MovementActionObject.UP && PlayfieldSize.upperY < this.y ? this.y -= delta*this.vy: null
        MovementActionObject.DOWN && PlayfieldSize.downY > this.y ?  this.y += delta*this.vy: null
        MovementActionObject.LEFT && PlayfieldSize.downX < this.x ? this.x -= delta*this.vx: null
        MovementActionObject.RIGHT && PlayfieldSize.upperX > this.x ? this.x += delta*this.vx: null

        if(MovementActionObject.DOWN) this.imageSource.update(delta,"walkDown")
        else if(MovementActionObject.UP) this.imageSource.update(delta,"walkUp")
        else if(MovementActionObject.LEFT) this.imageSource.update(delta,"walkLeft")
        else if(MovementActionObject.RIGHT) this.imageSource.update(delta,"walkRight")
        else this.imageSource.update(delta)


        //SHOTING
        if(ShotActionObject.DOWN) this.headSource.update(delta,"shotTearDown")
        else if(ShotActionObject.UP) this.headSource.update(delta,"shotTearUp")
        else if(ShotActionObject.LEFT) this.headSource.update(delta,"shotTearLeft")
        else if(ShotActionObject.RIGHT) this.headSource.update(delta,"shotTearRight")
        else this.headSource.update(delta)

    }
}